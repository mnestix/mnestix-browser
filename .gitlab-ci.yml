default:
  image: docker:26.1.2
  services:
    - docker:26.1.2-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

variables:
  IMAGE_NAME: mnestix-viewer
  IMAGE_TAG: latest
  #   Update the version manually
  IMAGE_TAG_VERSION: 0.1.0
  CONTAINER_BUILD_IMAGE: $CI_REGISTRY_IMAGE:pipeline-$CI_COMMIT_REF_SLUG

stages:
  - build
  - test
  - push

build_image:
  stage: build
  script:
    - docker build --target production --squash -t $CONTAINER_BUILD_IMAGE .
    - docker push $CONTAINER_BUILD_IMAGE

e2e_test:
  stage: test
  script:
    - docker pull $CONTAINER_BUILD_IMAGE
    - docker tag $CONTAINER_BUILD_IMAGE mnestix/$IMAGE_NAME:$IMAGE_TAG
    - docker tag $CONTAINER_BUILD_IMAGE mnestix/$IMAGE_NAME:$IMAGE_TAG_VERSION
    - docker compose -f compose.yml -f docker-compose/compose.test.yml pull
    - docker compose -f compose.yml -f docker-compose/compose.test.yml up -d
    - docker compose -f compose.yml -f docker-compose/compose.test.yml attach cypress-test

  artifacts:
    when: always
    paths:
      - cypress-artifacts/
    expire_in: 1 week

push-prod:
  stage: push
  rules:
    - if: $CI_COMMIT_BRANCH == "prod"
  script:
    - docker pull $CONTAINER_BUILD_IMAGE
    - docker tag $CONTAINER_BUILD_IMAGE mnestix/$IMAGE_NAME:$IMAGE_TAG
    - docker tag $CONTAINER_BUILD_IMAGE mnestix/$IMAGE_NAME:$IMAGE_TAG_VERSION
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
    - docker push mnestix/$IMAGE_NAME:$IMAGE_TAG
    - docker push mnestix/$IMAGE_NAME:$IMAGE_TAG_VERSION

push-develop:
  stage: push
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "staging"
  script:
    - docker pull $CONTAINER_BUILD_IMAGE
    - docker tag $CONTAINER_BUILD_IMAGE mnestixcr.azurecr.io/$IMAGE_NAME:$CI_COMMIT_BRANCH
    - docker login -u $AZURE_REGISTRY_USER -p $AZURE_REGISTRY_PASS mnestixcr.azurecr.io
    - docker push mnestixcr.azurecr.io/$IMAGE_NAME:$CI_COMMIT_BRANCH
